<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>poc</artifactId>
        <groupId>com.venu</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>jdg-remote-query</artifactId>

    <properties>
        <!-- Explicitly declaring the source encoding eliminates the following
            message: -->
        <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered
            resources, i.e. build is platform dependent! -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- Defines the main class to be execute when running java -jar command -->
        <main.class.remote-query>com.venu.AddressBookManager</main.class.remote-query>
        <version.org.infinispan>6.2.1.Final-redhat-2</version.org.infinispan>

        <!-- other plugin versions -->
        <exec.plugin.version>1.2.1</exec.plugin.version>
        <ant.plugin.version>1.7</ant.plugin.version>

        <!-- maven-compiler-plugin -->
        <maven.compiler.target>1.6</maven.compiler.target>
        <maven.compiler.source>1.6</maven.compiler.source>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.infinispan</groupId>
                <artifactId>infinispan-bom</artifactId>
                <version>${version.org.infinispan}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- Import the Infinispan client hotrod -->
        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-client-hotrod</artifactId>
        </dependency>

        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-query-dsl</artifactId>
        </dependency>

        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-remote-query-client</artifactId>
        </dependency>
    </dependencies>

    <build>
        <!-- Maven will append the version to the finalName (which is the name given to the generated jar) -->
        <finalName>${project.artifactId}</finalName>

        <plugins>
            <!-- This plugin permits the execution of this quickstart through mvn exec:java command -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>${exec.plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>java</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <mainClass>${main.class.remote-query}</mainClass>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>custom-classpath</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>${ant.plugin.version}</version>
                        <executions>
                            <execution>
                                <id>prepare-directories</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <tasks>
                                        <echo message="Build create lib/ directory"/>
                                        <delete dir="${project.build.directory}/lib"/>
                                        <mkdir dir="${project.build.directory}/lib"/>
                                    </tasks>
                                </configuration>
                            </execution>
                            <execution>
                                <id>copy-dependencies</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <tasks>
                                        <echo message="Copying libraries from server distribution to lib/ directory"/>
                                        <copy todir="${project.build.directory}/lib">
                                            <fileset dir="${classpath}">
                                                <include name="*.jar"/>
                                            </fileset>
                                        </copy>
                                        <pathconvert pathsep=" " property="jar.classpath">
                                            <fileset dir="${project.build.directory}/lib"/>
                                            <chainedmapper>
                                                <flattenmapper/>
                                                <filtermapper>
                                                    <replacestring from=" " to="%20"/>
                                                </filtermapper>
                                                <globmapper from="*" to="lib/*"/>
                                            </chainedmapper>
                                        </pathconvert>
                                        <echo message="CLASSPATH= ${jar.classpath}"/>
                                    </tasks>
                                    <exportAntProperties>true</exportAntProperties>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jar-plugin</artifactId>
                        <configuration>
                            <archive>
                                <manifest>
                                    <addDefaultImplementationEntries>false</addDefaultImplementationEntries>
                                    <addClasspath>false</addClasspath>
                                    <mainClass>${main.class.remote-query}</mainClass>
                                </manifest>
                                <manifestEntries>
                                    <Class-Path>${jar.classpath}</Class-Path>
                                </manifestEntries>
                            </archive>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>